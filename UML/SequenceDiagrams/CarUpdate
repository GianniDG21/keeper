@startuml
' === Titolo ===
title Sequence: Add New Vehicle to Inventory

' === Partecipanti ===
actor Staffer
participant "Internal Admin (Frontend)" as Frontend
participant "KEEPER System (API)" as API
database Database

' === Inizio della Sequenza ===

Staffer -> Frontend: 1. Fills out the new vehicle form (VIN, brand, model, etc.)
activate Frontend

Frontend -> API: 2. POST /vehicles (new vehicle data in JSON)
activate API
note left of API: POST is the standard HTTP method\n'for creating a new resource.

API -> API: 3. Validates incoming data
note right of API
  The API validates all fields.
  The most critical check is ensuring
  the VIN is unique to prevent duplicates.
end note

API -> Database: 4. Query: Checks if VIN already exists
activate Database
Database --> API: 5. Returns result (e.g., count = 0)
deactivate Database

alt VIN is Unique (Happy Path)
    API -> Database: 6. INSERT INTO "CarPark" (VIN, Brand, Model, ...) VALUES (...)
    activate Database
    Database --> API: New record created successfully
    deactivate Database

    API --> Frontend: 7. 201 Created (JSON of the new vehicle)
    deactivate API

    Frontend -> Staffer: 8. Displays success message: "Vehicle added to inventory!"
    deactivate Frontend

else VIN already exists (Alternative Path)
    API --> Frontend: 9. 409 Conflict (Error: A vehicle with this VIN already exists)
    deactivate API

    Frontend -> Staffer: 10. Displays an error message
    deactivate Frontend
end

@enduml